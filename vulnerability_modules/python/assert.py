from vulnerability_tool.framework.resources.types import ResourceType

TEST_NAME = "Python 'assert' statements in Production Code"
TEST_DESCRIPTION = """
This test checks if any assert statements are used in production code.
Although assert() can work well in dev environments, they are stripped away when the
compilation is optimized. For this reason, prefer to use 'if' statements and throwing
exceptions instead.
Sources:
https://stackoverflow.com/a/1838411"""

def validate(file, languages_and_libraries, **kwargs):
    if ResourceType.PYTHON not in languages_and_libraries:
        return (None, None, None, None)

    status = "PASS"
    warning = None
    file_name, file_contents = file

    for line_number, line in enumerate(file_contents, 1):
        if "assert(" in line:
            status = "FAIL"
            warning = "Vulnerability in file: %s, line: %d." % (file_name, line_number)
            break

    return (TEST_NAME, TEST_DESCRIPTION, status, warning)
