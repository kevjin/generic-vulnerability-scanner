from colorama import Fore, Style
from vulnerability_tool.framework.resources.types import ResourceType

TEST_NAME = "Generate Document Variable from JSON.Stringify()"
TEST_DESCRIPTION = """
This test checks that JSON.stringify is not called from within a <script> tag.
Doing so can make your program prone to cross-site scripting attacks.
To make sure the data is properly escaped, use the serialize-javascript package.
Source:
https://medium.com/javascript-in-plain-english/3-security-pitfalls-every-react-developer-should-know-c04715b876b5
https://www.npmjs.com/package/serialize-javascript"""

def validate(file, languages_and_libraries, **kwargs):
    if ResourceType.JAVASCRIPT not in languages_and_libraries:
        return (None, None, None, None) # quit

    error = None
    status = "PASS"
    file_name, file_contents = file
    opening_script_tag = -1
    json_stringify_called = -1
    for line_number, line in enumerate(file_contents, 1):
        if "<script" in line:
            opening_script_tag = line_number
        if "JSON.stringify(" in line:
            json_stringify_called = line_number
            status = "FAIL"
            error = "XSS Vulnerability in file: %s, line: %d." % (file_name, line_number)
        if "</script>" in line:
            if opening_script_tag == -1 or json_stringify_called == -1:
                continue

            if json_stringify_called >= opening_script_tag:
                status = "FAIL"
                error = "XSS Vulnerability in file: %s, line: %d." % (file_name, json_stringify_called)
                break

    return (TEST_NAME, TEST_DESCRIPTION, status, error)