import os
import importlib
from framework.helpers import split_by_file_extension
from framework.resources.language_detector import get_language
from framework.resources.types import ResourceType

MODULES_DIR = 'vulnerability_modules'

def format_file_to_module(file_name):
	# Skip module init files.
	if "__init__" in file_name:
		return None

	# Skip over ".pyc" files.
	if get_language(file_name) != ResourceType.PYTHON:
		return None

	file_name, file_extension = split_by_file_extension(file_name)

	module_name = file_name.replace("/", ".")
	return "%s.%s" % (MODULES_DIR, module_name)
	
module_names = []

for dir_, _, files in os.walk(MODULES_DIR):
    for file_name in files:
		rel_dir = os.path.relpath(dir_, MODULES_DIR)
		rel_file = os.path.join(rel_dir, file_name)
		module_name = format_file_to_module(rel_file)
		if module_name:
			module_names.append(module_name)

print(module_names)
imported_modules = map(importlib.import_module, module_names)
for module in imported_modules:
	module.module()